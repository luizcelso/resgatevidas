<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;
use Yii;
use yii\web\UploadedFile;
use yii\helpers\ArrayHelper;
/**
 * This is the base-model class for table "animal".
 *
 * @property integer $id
 * @property integer $animal_type_id
 * @property integer $status_id
 * @property string $location
 * @property string $name
 * @property string $extra_information
 * @property integer $username_id
 * @property string $updated_at
 * @property string $created_at
 * @property string $photo
 *
 * @property \app\models\AnimalType $animalType
 * @property \app\models\Status $status
 * @property \app\models\User $username
 * @property string $aliasModel
 */
abstract class Animal extends \yii\db\ActiveRecord
{

    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => 'updated_at',
                'value' => new Expression('NOW()'),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'animal';
    }

    /**
     * Alias name of table for crud viewsLists all Area models.
     * Change the alias name manual if needed later
     * @return string
     */
    public function getAliasModel($plural=false)
    {
        if($plural){
            return Yii::t('app', 'Animais');
        }else{
            return Yii::t('app', 'Animal');
        }
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['animal_type_id', 'status_id', 'location', 'name'], 'required'],
            [['animal_type_id', 'status_id', 'username_id'], 'integer'],
            [['extra_information'], 'string'],
            [['updated_at', 'created_at'], 'safe'],
            [['location', 'name', 'photo'], 'string', 'max' => 255],
            [['animal_type_id'], 'exist', 'skipOnError' => true, 'targetClass' => AnimalType::className(), 'targetAttribute' => ['animal_type_id' => 'id']],
            [['status_id'], 'exist', 'skipOnError' => true, 'targetClass' => Status::className(), 'targetAttribute' => ['status_id' => 'id']],
            [['username_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['username_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'animal_type_id' => Yii::t('app', 'Tipo de Animal'),
            'status_id' => Yii::t('app', 'Status'),
            'location' => Yii::t('app', 'Localização'),
            'name' => Yii::t('app', 'Nome'),
            'extra_information' => Yii::t('app', 'Informação Extra'),
            'username_id' => Yii::t('app', 'Usuário'),
            'updated_at' => Yii::t('app', 'Atualizado Em'),
            'created_at' => Yii::t('app', 'Criado Em'),
            'photo' => Yii::t('app', 'Foto'),
        ];
    }

    /**
     * @inheritdoc
     */
    // public function attributeHints()
    // {
    //     return array_merge(
    //         parent::attributeHints(),
    //         [
    //         'id' => Yii::t('app', 'ID'),
    //         'animal_type_id' => Yii::t('app', 'Animal Type Id'),
    //         'status_id' => Yii::t('app', 'Status Id'),
    //         'location' => Yii::t('app', 'Location'),
    //         'name' => Yii::t('app', 'Name'),
    //         'extra_information' => Yii::t('app', 'Extra Information'),
    //         'username_id' => Yii::t('app', 'Username Id'),
    //         'updated_at' => Yii::t('app', 'Updated At'),
    //         'created_at' => Yii::t('app', 'Created At'),
    //         'photo' => Yii::t('app', 'Photo'),
    //         ]);
    // }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAnimalType()
    {
        return $this->hasOne(\app\models\AnimalType::className(), ['id' => 'animal_type_id']);
    }

    public static function getAnimalTypes()
    {
        $list = \app\models\AnimalType::find()->all();
        //die(var_dump($list));
        $list = ArrayHelper::map($list, 'id', function($model, $defaultValue) {
            return $model->name;
        });
        //die(var_dump($list));
        return $list;
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getStatus()
    {
        return $this->hasOne(\app\models\Status::className(), ['id' => 'status_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUsername()
    {
        return $this->hasOne(\app\models\User::className(), ['id' => 'username_id']);
    }


    
    /**
     * @inheritdoc
     * @return \app\models\query\AnimalQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\query\AnimalQuery(get_called_class());
    }

        public function upload()
    {
        if ($this->validate()) {
            $this->photo = UploadedFile::getInstance($this,'photo');
            //die(var_dump($this->image));
            if (!is_null($this->photo)) {
                $this->photo->saveAs('images/' . $this->photo->baseName . '.' . $this->photo->extension);
                $this->photo = $this->photo->baseName . '.' . $this->photo->extension;
            }
            
            return true;
        } else {
            return false;
        }
    }


}
