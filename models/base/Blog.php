<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;
use Yii;

/**
 * This is the base-model class for table "blog".
 *
 * @property integer $id
 * @property string $subject
 * @property string $body
 * @property string $created_at
 * @property string $updated_at
 * @property integer $username_id
 *
 * @property \app\models\User $username
 * @property string $aliasModel
 */
abstract class Blog extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'blog';
    }

    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => 'updated_at',
                'value' => new Expression('NOW()'),
            ],
        ];
    }

    /**
     * Alias name of table for crud viewsLists all Area models.
     * Change the alias name manual if needed later
     * @return string
     */
    public function getAliasModel($plural=false)
    {
        if($plural){
            return Yii::t('app', 'Blogs');
        }else{
            return Yii::t('app', 'Blog');
        }
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['subject', 'body', 'username_id'], 'required'],
            [['body'], 'string'],
            [['created_at', 'updated_at'], 'safe'],
            [['username_id'], 'integer'],
            [['subject'], 'string', 'max' => 255],
            [['username_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['username_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'subject' => Yii::t('app', 'Assunto'),
            'body' => Yii::t('app', 'Conteúdo'),
            'created_at' => Yii::t('app', 'Criado Em'),
            'updated_at' => Yii::t('app', 'Atualizado Em'),
            'username_id' => Yii::t('app', 'Usuário'),
        ];
    }

    /**
     * @inheritdoc
     */
    // public function attributeHints()
    // {
    //     return array_merge(
    //         parent::attributeHints(),
    //         [
    //         'id' => Yii::t('app', 'ID'),
    //         'subject' => Yii::t('app', 'Subject'),
    //         'body' => Yii::t('app', 'Body'),
    //         'created_at' => Yii::t('app', 'Created At'),
    //         'updated_at' => Yii::t('app', 'Updated At'),
    //         'username_id' => Yii::t('app', 'Username Id'),
    //         ]);
    // }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUsername()
    {
        return $this->hasOne(\app\models\User::className(), ['id' => 'username_id']);
    }


    
    /**
     * @inheritdoc
     * @return \app\models\query\BlogQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\query\BlogQuery(get_called_class());
    }


}
