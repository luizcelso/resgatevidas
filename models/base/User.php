<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;
use yii\web\IdentityInterface;
use yii\db\ActiveRecord;
use Yii;

/**
 * This is the base-model class for table "user".
 *
 * @property integer $id
 * @property string $name
 * @property string $email
 * @property string $password
 * @property integer $role_id
 * @property string $phone_number
 * @property string $authKey
 *
 * @property \app\models\Animal[] $animals
 * @property \app\models\Blog[] $blogs
 * @property \app\models\Role $role
 * @property string $aliasModel
 */
abstract class User extends ActiveRecord implements IdentityInterface
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'user';
    }

    public static function findIdentity($id)
    {
        return static::findOne($id);
    }

    public static function findIdentityByAccessToken($token, $type = null)
    {
        return static::findOne(['access_token' => $token]);
    }

    public function getId()
    {
        return $this->id;
    }

    public function getAuthKey()
    {
        //return $this->auth_key;
        return $this->authKey;
    }

    public function validateAuthKey($authKey)
    {
        return $this->getAuthKey() === $authKey;
    }

    public static function findByUsername($name)
    {
        //return User::findOne(['email' => $email]);
        return self::findOne(['name' => $name]);
    }

    public function validatePassword($password)
    {
        return $this->password === $password;
    }
    /**
     * Alias name of table for crud viewsLists all Area models.
     * Change the alias name manual if needed later
     * @return string
     */
    public function getAliasModel($plural=false)
    {
        if($plural){
            return Yii::t('app', 'Users');
        }else{
            return Yii::t('app', 'User');
        }
    }

        public function beforeSave($insert)
    {
    if (parent::beforeSave($insert)) {
        
        $this->authKey =  md5(time());

        return true;
    } else {
        return false;
    }
}

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'email', 'password', 'phone_number'], 'required'],
            [['role_id'], 'integer'],
            [['name'], 'unique'],
            [['name', 'email', 'password', 'authKey'], 'string', 'max' => 255],
            [['phone_number'], 'string', 'max' => 45],
            [['role_id'], 'exist', 'skipOnError' => true, 'targetClass' => Role::className(), 'targetAttribute' => ['role_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', 'Nome'),
            'email' => Yii::t('app', 'E-mail'),
            'password' => Yii::t('app', 'Senha'),
            'role_id' => Yii::t('app', 'PermissÃ£o'),
            'phone_number' => Yii::t('app', 'Telefone'),
            'authKey' => Yii::t('app', 'Auth Key'),
        ];
    }

    /**
     * @inheritdoc
     */
    // public function attributeHints()
    // {
    //     return array_merge(
    //         parent::attributeHints(),
    //         [
    //         'id' => Yii::t('app', 'ID'),
    //         'name' => Yii::t('app', 'Name'),
    //         'email' => Yii::t('app', 'Email'),
    //         'password' => Yii::t('app', 'Password'),
    //         'role_id' => Yii::t('app', 'Role Id'),
    //         'phone_number' => Yii::t('app', 'Phone Number'),
    //         'authKey' => Yii::t('app', 'Auth Key'),
    //         ]);
    // }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAnimals()
    {
        return $this->hasMany(\app\models\Animal::className(), ['username_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBlogs()
    {
        return $this->hasMany(\app\models\Blog::className(), ['username_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRole()
    {
        return $this->hasOne(\app\models\Role::className(), ['id' => 'role_id']);
    }


    
    /**
     * @inheritdoc
     * @return \app\models\query\UserQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\query\UserQuery(get_called_class());
    }


}
